// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$ng-accepted-primary: mat.define-palette(mat.$indigo-palette);
$ng-accepted-accent: mat.define-palette(mat.$green-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$ng-accepted-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$ng-accepted-theme: mat.define-light-theme(
  (
    color: (
      primary: $ng-accepted-primary,
      accent: $ng-accepted-accent,
      warn: $ng-accepted-warn,
    ),
  )
);

$ng-accepted-dark-theme: mat.define-dark-theme(
  (
    color: (
      primary: $ng-accepted-primary,
      accent: $ng-accepted-accent,
      warn: $ng-accepted-warn,
    ),
  )
);

.darkMode {
  @include mat.all-component-colors($ng-accepted-dark-theme);
}

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($ng-accepted-theme);

/* You can add global styles to this file, and also import other style files */
html,
body {
  height: 100%;
}

body {
  margin: 0;
  font-family: Roboto, 'Helvetica Neue', sans-serif;
}

$bp-large: 68.75em; // 1100px

.container {
  height: max-content;
  margin-top: 4rem;

  display: grid;
  grid-template-columns: 10% auto 10%;
  grid-template-areas: 'left main right';
  gap: 1.5rem;

  .section {
    height: max-content;
    min-height: 100vh;
  }

  .left {
    grid-area: left;
  }

  .main {
    grid-area: main;
  }

  .right {
    grid-area: right;
  }

  @media only screen and (max-width: $bp-large) {
    display: grid;
    grid-template-columns: 100%;
    grid-template-areas: 'main';
    gap: 2rem;

    .left {
      display: none;
    }

    .right {
      display: none;
    }

    .main {
      grid-area: main;
    }
  }
}
